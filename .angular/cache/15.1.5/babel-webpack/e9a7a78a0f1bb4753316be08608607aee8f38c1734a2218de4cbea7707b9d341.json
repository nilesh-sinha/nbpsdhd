{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\nimport { NoticeWindowComponent } from './shared/notice-window/notice-window.component';\nimport { RootContainerComponent } from './shared/root-container/root-container.component';\nimport { DashboardComponent } from './shared/dashboard/dashboard.component';\nimport { AboutComponent } from './shared/about/about.component';\nimport { ContactComponent } from './shared/contact/contact.component';\nimport { PageNotFoundComponent } from './shared/page-not-found/page-not-found.component';\nimport { ComingSoonComponent } from './shared/coming-soon/coming-soon.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }],\n  imports: [BrowserModule, AppRoutingModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  }), HttpClientModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavigationComponent, NoticeWindowComponent, RootContainerComponent, DashboardComponent, AboutComponent, ContactComponent, PageNotFoundComponent, ComingSoonComponent],\n    imports: [BrowserModule, AppRoutingModule, i1.ServiceWorkerModule, HttpClientModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAAmBA,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAA2B,sBAAsB;AAC1E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,SAASC,qBAAqB,QAAQ,gDAAgD;AACtF,SAASC,sBAAsB,QAAQ,kDAAkD;AACzF,SAASC,kBAAkB,QAAQ,wCAAwC;AAC3E,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,qBAAqB,QAAQ,kDAAkD;AACxF,SAASC,mBAAmB,QAAQ,4CAA4C;AAChF,SAASC,oBAAoB,EAAEC,gBAAgB,QAAQ,iBAAiB;;;AA8BxE,OAAM,MAAOC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRb,YAAY;AAAA;AAEbY,SAAS;aALT,CACT;IAAEE,OAAO,EAAEH,gBAAgB;IAAEI,QAAQ,EAAEL;EAAoB,CAAC,CAC7D;EAAAM,UAZCnB,aAAa,EACbE,gBAAgB,EAChBE,mBAAmB,CAACgB,QAAQ,CAAC,gBAAgB,EAAE;IAC7CC,OAAO,EAAE,CAACtB,SAAS,EAAE;IACrB;IACA;IACAuB,oBAAoB,EAAE;GACvB,CAAC,EACFrB,gBAAgB;AAAA;;2EAOPc,SAAS;IAAAQ,eA1BlBpB,YAAY,EACZE,mBAAmB,EACnBC,qBAAqB,EACrBC,sBAAsB,EACtBC,kBAAkB,EAClBC,cAAc,EACdC,gBAAgB,EAChBC,qBAAqB,EACrBC,mBAAmB;IAAAO,UAGnBnB,aAAa,EACbE,gBAAgB,0BAOhBD,gBAAgB;EAAA;AAAA","names":["isDevMode","BrowserModule","HttpClientModule","AppRoutingModule","AppComponent","ServiceWorkerModule","NavigationComponent","NoticeWindowComponent","RootContainerComponent","DashboardComponent","AboutComponent","ContactComponent","PageNotFoundComponent","ComingSoonComponent","HashLocationStrategy","LocationStrategy","AppModule","bootstrap","provide","useClass","imports","register","enabled","registrationStrategy","declarations"],"sourceRoot":"","sources":["/Users/nilesh/Dev2/nbpsdhd/src/app/app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\nimport { NoticeWindowComponent } from './shared/notice-window/notice-window.component';\nimport { RootContainerComponent } from './shared/root-container/root-container.component';\nimport { DashboardComponent } from './shared/dashboard/dashboard.component';\nimport { AboutComponent } from './shared/about/about.component';\nimport { ContactComponent } from './shared/contact/contact.component';\nimport { PageNotFoundComponent } from './shared/page-not-found/page-not-found.component';\nimport { ComingSoonComponent } from './shared/coming-soon/coming-soon.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    NoticeWindowComponent,\n    RootContainerComponent,\n    DashboardComponent,\n    AboutComponent,\n    ContactComponent,\n    PageNotFoundComponent,\n    ComingSoonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    HttpClientModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}